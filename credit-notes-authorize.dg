
//********** API KEY ***************
// INGRESE AQUÍ EL API KEY DE SU CUENTA DE efacturapty

apiKey = "INGRESE AQUI SU API KEY";

//**********************************
customer = zoho.books.getRecordsByID("Contacts",organization.get("organization_id"),creditnote.get("customer_id"));
sendMap = {"customer":customer,"creditnote":creditnote};
headers = {"ApiKeyEfactura":apiKey,"Content-Type":"application/x-www-form-urlencoded"};
autorizacion = invokeurl
[
	url :"https://hub.efacturapty.com/Zoho/CreditMemo"
	type :POST
	parameters:sendMap
	headers:headers
];
autorizacionMap = autorizacion.toMap();
resultMap = Map();
if(autorizacionMap.get('autorizada'))
{
	customFieldList = List();
	customFieldList.add({'api_name':'cf_cufe','value':autorizacionMap.get('cufe')});
	customFieldList.add({'api_name':'cf_protocolo_de_autorizaci_n','value':autorizacionMap.get('protocoloAutorizacion')});
	customFieldList.add({'api_name':'cf_fecha_de_autorizaci_n','value':autorizacionMap.get('fechaAutorizacion').left(10)});
	updateCreditNoteMap = {'custom_fields':customFieldList};
	updateCreditNote = zoho.books.updateRecord('CreditNotes',organization.get('organization_id'),creditnote.get('creditnote_id'),updateCreditNoteMap);
	markAsSent = zoho.books.markStatus('CreditNotes',organization.get('organization_id'),creditnote.get('creditnote_id'),'sent');
	resultMap = {"code":updateCreditNote,"message":"Nota de crédito autorizada","CUFE":autorizacionMap.get('cufe')};

	//Adjuntar PDF
	//Habilitar conexión adicional Zoho Books como se muestra en 
	//      https://github.com/efacturapty/integracion-zohobooks?tab=readme-ov-file#conexi%C3%B3n-para-adjuntar-pdf-del-cafe
	/*pdfInvoice = invokeurl("https://api.efacturapty.com/api/v1/Invoices/" + autorizacionMap.get('invoice') + "/cafe-file","GET",{"Authorization":"Bearer " + apiKey});
	pdfInvoice.setParamName("attachment");
	result = invokeurl
	[
		url :"https://www.zohoapis.com/books/v3/invoices/" + invoice.get('invoice_id') + "/attachment?organization_id=" + organization.get('organization_id')
		type :POST
		files:pdfInvoice
		connection:"zbooks"
	];*/
}
else
{
	errores = autorizacionMap.get('rRetEnviFe').get('xProtFe').get('rProtFe').get('gInfProt').get('gResProc');
	mensajeError = "";
	for each  error in errores
	{
		mensajeError = mensajeError + "  [" + error.get('dCodRes') + "-" + error.get('dMsgRes') + "]";
	}
	customFieldList = List();
	customFieldList.add({'api_name':'cf_protocolo_de_autorizaci_n','value':mensajeError});
	updateCreditNoteMap = {'custom_fields':customFieldList};
	updateCreditNote = zoho.books.updateRecord('CreditNotes',organization.get('organization_id'),creditnote.get('creditnote_id'),updateCreditNoteMap);
	resultMap = {"code":1,"message":"Errores encontrados: " + mensajeError};
}
return resultMap;
